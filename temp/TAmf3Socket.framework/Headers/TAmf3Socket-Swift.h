// Generated by Apple Swift version 3.0 (swiftlang-800.0.46.2 clang-800.0.38)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import CocoaAsyncSocket;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSMutableData;
@class NSTimer;

SWIFT_CLASS("_TtC11TAmf3Socket16TSocketGCDServer")
@interface TSocketGCDServer : NSObject
@property (nonatomic, strong) NSMutableData * _Nullable buffMutableData;
@property (nonatomic, strong) NSTimer * _Nullable heartNSTimer;
/**
  是否使用大端模式
*/
@property (nonatomic) BOOL _isByteBigEndian;
@property (nonatomic, strong) id _Nullable heartMessage;
@property (nonatomic, copy) void (^ _Nullable onConnectSucHandle)(void);
@property (nonatomic, copy) void (^ _Nullable onCloseHandle)(void);
@property (nonatomic, copy) void (^ _Nullable onWillColseHandle)(id _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onMsgResultHandle)(id _Nonnull);
@property (nonatomic, copy) id _Nonnull (^ _Nullable onMsgDicHandle)(id _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onTLogHandle)(NSString * _Nonnull);
/**
  msgheadLength
  author:
  taven
  date:
  16-07-14 09:07:34
  \param hearTime 心跳包函数调用间隔 单位秒  <=0 则不开启心跳检测

  \param msgheadLength 消息头长度 必须指定大小 headSize
  －isByteBigEndian 是否服务器cpu架构目标用大端模式

*/
- (nonnull instancetype)initWithHeartTime:(double)heartTime msgHeadSize:(NSInteger)msgHeadSize isByteBigEndian:(BOOL)isByteBigEndian OBJC_DESIGNATED_INITIALIZER;
/**
  设置心跳间隔
  \param hearTime <#hearTime description#>

  \param msgheadLength <#msgheadLength description#>

*/
- (void)updataSocketParams:(double)hearTime msgheadLength:(NSInteger)msgheadLength isByteBigEndian:(BOOL)isByteBigEndian;
- (void)onConnectSocket:(NSString * _Nonnull)host port:(NSInteger)port timeOut:(NSTimeInterval)timeOut connectH:(void (^ _Nullable)(void))connectH;
/**
  判断当前是否开启了 心跳
  author:
  taven
  date:
  16-07-14 09:07:20
*/
- (BOOL)isEnableHeart;
- (void)closeSocket;
- (void)reConnect;
- (void)setHeartAndHead:(double)heartTime msgLen:(NSInteger)msgLen;
/**
  读取消息头 子类必须ovrride
  author:
  taven
  date:
  16-07-14 08:07:46
*/
- (NSInteger)readMsgHead:(NSMutableData * _Nonnull)data;
/**
  读取消息body  子类必须ovrride
  author:
  taven
  date:
  16-07-14 08:07:46
*/
- (BOOL)readMsgBody:(NSMutableData * _Nonnull)data;
/**
  发送心跳包
  author:
  taven
  date:
  16-07-14 08:07:3
*/
- (void)sendHeartMsg;
/**
  发送正常消息
  author:
  taven
  date:
  16-07-14 08:07:58
  \param msgData <#msgData description#>

*/
- (void)sendMessage:(id _Nullable)msgData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11TAmf3Socket17Amf3SocketManager")
@interface Amf3SocketManager : TSocketGCDServer
/**
  解析消息头
  \param data <#data description#>

*/
- (NSInteger)readMsgHead:(NSMutableData * _Nonnull)data;
- (BOOL)readMsgBody:(NSMutableData * _Nonnull)data;
/**
  发送消息
  author:
  taven
  date:
  16-07-13 14:07:48
*/
- (void)sendMessage:(id _Nullable)msgData;
/**
  心跳包消息
  author:
  taven
  date:
  16-07-13 13:07:32
*/
- (void)sendHeartMsg;
- (nonnull instancetype)initWithHeartTime:(double)heartTime msgHeadSize:(NSInteger)msgHeadSize isByteBigEndian:(BOOL)isByteBigEndian OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSMutableData (SWIFT_EXTENSION(TAmf3Socket))
@property (nonatomic, readonly) BOOL isNativeBigEndian;
- (void)appendShort:(NSInteger)value isBigEndian:(BOOL)isBigEndian;
- (void)appendInt:(NSInteger)value isBigEndian:(BOOL)isBigEndian;
- (void)appendUInt64:(NSInteger)value isBigEndian:(BOOL)isBigEndian;
- (NSInteger)getShort:(BOOL)isBigEndian;
- (NSInteger)getInt32:(BOOL)isBigEndian;
- (NSInteger)getUInt32:(BOOL)isBigEndian;
- (uint64_t)getUInt64:(BOOL)isBigEndian;
- (void)appendFloat:(float)value isBigEndian:(BOOL)isBigEndian;
- (void)appendDouble:(double)value isBigEndian:(BOOL)isBigEndian;
- (float)getFloat;
- (double)getDouble;
- (void)appendBool:(BOOL)val;
- (BOOL)getBool;
- (NSMutableData * _Nonnull)getBytesByLength:(NSInteger)len location:(NSInteger)location;
@end


SWIFT_CLASS("_TtC11TAmf3Socket10R_msg_base")
@interface R_msg_base : NSObject
@property (nonatomic) NSInteger cmd;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDictionary;

SWIFT_CLASS("_TtC11TAmf3Socket10S_msg_base")
@interface S_msg_base : NSObject
@property (nonatomic) NSInteger cmd;
- (nonnull instancetype)initWith_cmd:(NSInteger)_cmd OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@class GCDAsyncSocket;
@class NSError;

@interface TSocketGCDServer (SWIFT_EXTENSION(TAmf3Socket)) <GCDAsyncSocketDelegate>
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Nonnull)sock;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didConnectToHost:(NSString * _Nonnull)host port:(uint16_t)port;
- (void)socketDidDisconnect:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock willDisconnectWithError:(NSError * _Null_unspecified)err;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
@end

#pragma clang diagnostic pop
